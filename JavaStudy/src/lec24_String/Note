String 클래스(객체)는 데이터가 변화면 메모리상의 변화가 많아 속도가 느림

String str = "JAVA";
(JAVA)

str=str+"_8";
(JAVA) -> (나중에 GC가 회수)
(JAVA_8)
이런식으로 변경하면 기존의 객체에 문자열을 추가하는 것이 아니라
기존의 객체를 버리고, 새로운 객체를 메모리에 생성한다
이때, 기존 객체는 GC에 의해 메모리 회수가 이루어짐


StringBuffer, StringBuilder
-String 클래스의 단점을 보완한 클래스로 데이터가 변경되면
기존 객체를 삭제하는 것이 아니라 재활용한다
속도는 StringBuilder가 조금 더 빠르며,
데이터 안정성은 StringBuffer가 조금 더 좋다

StringBuffer sf = new StringBuffer("JAVA");
(JAVA)

sf.append("_8");
(JAVA)+(_8)